<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit5ded4b706a8c8d7751713bb309b24e03
=======
class ComposerAutoloaderInit0a9a98a4a7d6ecb4dc271df73008018e
>>>>>>> 6a3a6c0e4e25a00ce0be99cd2338b5ff3fc232cb
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit5ded4b706a8c8d7751713bb309b24e03', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit5ded4b706a8c8d7751713bb309b24e03', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInit0a9a98a4a7d6ecb4dc271df73008018e', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit0a9a98a4a7d6ecb4dc271df73008018e', 'loadClassLoader'));
>>>>>>> 6a3a6c0e4e25a00ce0be99cd2338b5ff3fc232cb

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire5ded4b706a8c8d7751713bb309b24e03($file)
=======
function composerRequire0a9a98a4a7d6ecb4dc271df73008018e($file)
>>>>>>> 6a3a6c0e4e25a00ce0be99cd2338b5ff3fc232cb
{
    require $file;
}
